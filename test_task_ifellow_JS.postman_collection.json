{
	"info": {
		"_postman_id": "77c646cf-21fd-4367-af78-1921b038409e",
		"name": "test_task_ifellow_JS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Root",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002"
				}
			},
			"response": []
		},
		{
			"name": "Get All Tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3002/api/v1/task",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomNum = Math.floor(Math.random() * 1000);\r",
							"\r",
							"const timestamp = new Date().getTime();\r",
							"\r",
							"const taskName = `Task-${timestamp}-${randomNum}`;\r",
							"\r",
							"const descriptionTask = `Описание задачи-${timestamp}-${randomNum}`;\r",
							"\r",
							"pm.environment.set(\"taskName\", taskName);\r",
							"\r",
							"pm.environment.set(\"descriptionTask\", descriptionTask);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json ();\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"task_id\", responseJson.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{taskName}}\",\r\n  \"description\": \"{{descriptionTask}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/api/v1/task/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"task",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Task by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3002/api/v1/task/{{task_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"task",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Task",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomNum = Math.floor(Math.random() * 1000);\r",
							"\r",
							"const timestamp = new Date().getTime();\r",
							"\r",
							"const taskName = `Новое имя-${timestamp}-${randomNum}`;\r",
							"\r",
							"const newdescriptionTask = `Новое описание задачи-${timestamp}-${randomNum}`;\r",
							"\r",
							"pm.environment.set(\"taskName\", taskName);\r",
							"\r",
							"pm.environment.set(\"newdescriptionTask\", newdescriptionTask);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{taskName}}\",\r\n    \"description\":\"{{newdescriptionTask}} \"\r\n}"
				},
				"url": {
					"raw": "http://localhost:3002/api/v1/task/{{task_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"task",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Task",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Updated Task\",\"description\":\"Updated description of the task\"}"
				},
				"url": {
					"raw": "http://localhost:3002/api/v1/task/{{task_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"task",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Solution",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomNum = Math.floor(Math.random() * 1000);\r",
							"\r",
							"const timestamp = new Date().getTime();\r",
							"\r",
							"const SolutionName = `Решение-${timestamp}-${randomNum}`;\r",
							"\r",
							"const SolutionDescription = `Описание решения-${timestamp}-${randomNum}`;\r",
							"\r",
							"pm.environment.set(\"SolutionName\", SolutionName);\r",
							"\r",
							"pm.environment.set(\"SolutionDescription\", SolutionDescription);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json ();\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"solution_id\", responseJson.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{SolutionName}}\",\r\n  \"description\":\"{{SolutionDescription}}\",\r\n  \"language\":\"Java\",\r\n  \"task_id\":{{task_id}}\r\n  }"
				},
				"url": {
					"raw": "http://localhost:3002/api/v1/solution",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"solution"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Solutions by Task ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3002/api/v1/task_solution/{{task_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"task_solution",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Solution",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomNum = Math.floor(Math.random() * 1000);\r",
							"\r",
							"const timestamp = new Date().getTime();\r",
							"\r",
							"const newSolutionDescription = `Новое описание решения-${timestamp}-${randomNum}`;\r",
							"\r",
							"pm.environment.set(\"newSolutionDescription\", newSolutionDescription);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"{{newSolutionDescription}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/api/v1/solution/{{solution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"solution",
						"{{solution_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Solution",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3002/api/v1/solution/{{solution_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"v1",
						"solution",
						"{{solution_id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "task_id",
			"value": ""
		},
		{
			"key": "solution_id",
			"value": ""
		}
	]
}